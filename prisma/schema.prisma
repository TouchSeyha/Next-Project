// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Customer {
  id         String      @id @default(uuid())
  name       String
  email      String?
  phone      String?
  address    String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  quotations Quotation[]
  invoices   Invoice[]
}

model Quotation {
  id         String    @id @default(uuid())
  number     String    @unique
  date       DateTime
  validUntil DateTime
  customerId String
  customer   Customer  @relation(fields: [customerId], references: [id])
  subtotal   Float
  taxRate    Float
  taxAmount  Float
  total      Float
  notes      String?
  status     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  items      Item[]    @relation("QuotationItems")
  invoices   Invoice[]
}

model Invoice {
  id          String     @id @default(uuid())
  number      String     @unique
  date        DateTime
  dueDate     DateTime
  quotationId String?
  quotation   Quotation? @relation(fields: [quotationId], references: [id])
  customerId  String
  customer    Customer   @relation(fields: [customerId], references: [id])
  subtotal    Float
  taxRate     Float
  taxAmount   Float
  total       Float
  amountPaid  Float      @default(0)
  balance     Float
  notes       String?
  status      String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  items       Item[]     @relation("InvoiceItems")
}

model Item {
  id          String     @id @default(uuid())
  description String
  quantity    Float
  price       Float
  amount      Float
  quotationId String?
  quotation   Quotation? @relation("QuotationItems", fields: [quotationId], references: [id])
  invoiceId   String?
  invoice     Invoice?   @relation("InvoiceItems", fields: [invoiceId], references: [id])
}
